language: c
os: linux
dist: xenial
arch: amd64
compiler:
  - gcc
  - clang
env:
  - CONFIG=minimal
  - CONFIG=full

jobs:
  allow_failures:
#   - os: windows
#     env: CONFIG=full

  # Additional builds to do (outside the build matrix)
  include:

    # Windows builds
#   - name: Windows full
#     os: windows
#     env: CONFIG=full
#     cache:
#       directories:
#         - $HOME/vcpkg-full
    - name: Windows minimal
      os: windows
      env: CONFIG=minimal
      cache:
        directories:
          - $HOME/vcpkg-minimal

    # Mac OS X builds
    - name: Mac OSX full
      os: osx
      env: CONFIG=full
      addons:
        homebrew:
          packages:
          - cmake
          - openssl
          - sqlite
    - name: Mac OSX minimal
      os: osx
      env: CONFIG=minimal
      addons:
        homebrew:
          packages:
          - cmake
          - sqlite

    # 64-bit ARM builds
    - name: arm64 full
      arch: arm64
      env: config=full
    - name: arm64 minimal
      arch: arm64
      env: config=minimal

    # 64-bit Little-Endian PPC builds
    - name: ppc64le full
      arch: ppc64le
      env: config=full
    - name: ppc64le minimal
      arch: ppc64le
      env: config=minimal

    # s390x (big-endian) builds
    - name: s390x full
      arch: s390x
      env: config=full
    - name: s390x minimal
      arch: s390x
      env: config=minimal

    # Bionic builds
    - name: bionic full
      dist: bionic
      env: CONFIG=full
    - name: bionic minimal
      dist: bionic
      env: CONFIG=minimal

    # Debian package builds
    - name: debian package
      env: CONFIG=deb

    # Docker build
    - name: docker
      language: minimal
      services: docker
      env: CONFIG=docker

install:
  - autotest/ci/install-build-depends.sh
script:
  - autotest/ci/build-and-test.sh

