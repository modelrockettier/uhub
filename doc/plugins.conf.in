# ATTENTION!
# Plugins are invoked in the order of listing in the plugin config file.

# NOTE: By default:
#   PLUGIN_DIR = /usr/lib/uhub or /usr/local/lib/uhub
#   CONFIG_DIR = /etc/uhub
#   LOG_DIR    = /var/log

# Sqlite based user authentication.
#
# This plugin provides a Sqlite based authentication database for
# registered users.
# Use the uhub-passwd utility to create the database and add/remove users.
#
# Parameters:
# file: path/filename for database.
# exclusive:       whether this is the only authentication plugin in use.
# readonly:        don't make any changes to the database
# update_activity: Keep track of the date and time each user last logged in.
plugin ${PLUGIN_DIR}/mod_auth_sqlite.so "file=${CONFIG_DIR}/users.db exclusive=0 readonly=0 update_activity=1"

# User management commands
#
# This plugin provides hub commands to manage users.
#
# NOTE: To prevent privilege escalations, the !userdel, !usermod, and !userpass
#   commands may not target higher-privileged users.  E.g. ops aren't allowed
#   to change admin passwords and supers aren't allowed to demote an admin.
#
#   Likewise, the !useradd and !usermod commands only allow credentials up to
#   the user's level.  E.g. ops can register users and ops, but not supers
#   or admins. Likewise supers are allowed to promote users to supers, but
#   only an admin can promote a user to admin.
#
# Hub commands:
# !register - Register your username (requires register_self=1)
# !password - Change your own password
# !useradd - Register a new user (op required)
# !userdel - Delete a registered user (op required)
# !usermod - Modify user credentials (super required)
# !userpass - Change password for a user (op required)
# !userlist - Show list of all registered users (op required)
#
# Parameters:
# notify:          notify ops when a user registers (or tries to)
#                  also notifies admins about attempts to modify admin accounts
# register_self:   allow users to register themselves
# allow_spaces:    allow users to self-register who have spaces in their nick (hard to manage)
# password_length: the minimum password length (only affects new/changed passwords)
#plugin ${PLUGIN_DIR}/mod_users.so "notify=1 register_self=0 password_length=1"

# Require a default password from all guests.
#
# This does not affect registered users, but guests that do not specify a
# password, or who specify the wrong password will be denied.
#
# To avoid problems, this should appear after your normal auth plugin in
# the plugins.conf file.
#
# Parameters:
# password: the default guest password
#plugin ${PLUGIN_DIR}/mod_guest_passwd.so "password=uhub-guest"

# Topic commands.
# Note: "topic" == "hub description" (as configured in uhub.conf)
#
# !topic      - change the topic (op required)
# !showtopic  - show the topic
# !resettopic - reset the topic to the default (op required)
#
# This plugins takes no parameters.
#plugin ${PLUGIN_DIR}/mod_topic.so

# Log file writer
#
# If the log file exists when the plugin is loaded, it will read the existing
# entries into memory for use with the !log and !findlog commands.
#
# Parameters:
# file: path/filename for log file.
# syslog: if true then syslog is used instead of writing to a file (Unix only)
# max_log_entries: how many log entries to keep in memory for commands
plugin ${PLUGIN_DIR}/mod_logging.so "file=${LOG_DIR}/uhub.log max_log_entries=200"

# A simple example plugin
#
# Hub commands:
# !example - An example command (simply replies back with hello).
#plugin ${PLUGIN_DIR}/mod_example.so

# A plugin sending a welcome message.
#
# Hub commands:
# !motd - Show the Message Of The Day
# !rules - Show the hub rules.
#
# Parameters:
# motd: path/filename for the welcome message (message of the day)
# rules: path/filename for the rules file
#
# NOTE: The files MUST exist, however if you do not wish to provide one then these parameters can be omitted.
#
# The motd/rules files can do the following substitutions:
# %n - Nickname of the user who entered the hub or issued the command.
# %a - IP address of the user
# %c - The credentials of the user (guest, user, op, super, admin).
# %% - Becomes '%'
# %H - Hour 24-hour format (00-23) (Hub local time)
# %I - Hour 12-hour format (01-12) (Hub local time)
# %P - 'AM' or 'PM'
# %p - 'am' or 'pm'
# %M - Minutes (00-59) (Hub local time)
# %S - Seconds (00-60) (Hub local time)
# %z - The numeric timezone (+hhmm or -hhmm)
# %Z - The timezone name or abbreviation
plugin ${PLUGIN_DIR}/mod_welcome.so "motd=${CONFIG_DIR}/motd.txt rules=${CONFIG_DIR}/rules.txt"

# Simple chat history plugin.
#
# This plugin provides temporary chat history functionality.
# The chat history will be displayed when a user connects or when a user requests
# the chat history with the !history command.
#
# NOTE: The chat history will be deleted when uhub is restarted see
#   mod_chat_history_sqlite if you want the chat history to be kept after restarts.
#
# Hub commands:
# !history - Show chat message history (optionally, how many lines to show)
#
# Parameters:
# history_max:     the maximum number of messages to keep in history
# history_default: How many messages to show when the history command is called without arguments.
# history_connect: the number of chat history messages to send when users connect (0 = do not send any history)
plugin ${PLUGIN_DIR}/mod_chat_history.so "history_max=200 history_default=10 history_connect=5"

# Provides a persistent chat history at login and request
#
# This plugin provides chat history functionality while logging into the hub,
# and also using the !history command.
#
# Unlike the mod_chat_history plugin which stores the chat history in memory,
# this stores the chat history in a sqlite database. This means that the chat
# history is kept between hub restarts.
#
# Hub commands:
# !history - Show chat message history (optionally, how many lines to show)
# !historycleanup - Delete the entire chat message history (super required)
#
# Parameters:
# file:            Path/filename for the database (needs to be writable by the hub).
# history_max:     the maximum number of messages to keep in history
# history_default: How many messages to show when the history command is called without arguments.
# history_connect: the number of chat history messages to send when users connect (0 = do not send any history)
#plugin ${PLUGIN_DIR}/mod_chat_history_sqlite.so "file=${CONFIG_DIR}/history.db history_max=200 history_default=10 history_connect=5"

# Joins plugin
#
# Sends a chat message when users join or leave the hub.
#
# This accepts the same substitutions as mod_welcome plus:
# %r - The reason the user left (only useful in the leave message)
#
# Parameters:
# join: path/filename for the join message
# leave: path/filename for the leave/quit/kick message
# min_notify: minimum credentials able to see login messages (default: guest)
#plugin ${PLUGIN_DIR}/mod_joins.so "join=${CONFIG_DIR}/join.txt leave=${CONFIG_DIR}/leave.txt"

# No guest downloading.
#
# This plugin only allows registered users to search and initiate transfers.
#
# This plugins takes no parameters.
#plugin ${PLUGIN_DIR}/mod_no_guest_downloads.so

# Turn uhub into a chat-only hub.
#
# Disables connection setup, search and results.
#
# This plugins takes no parameters.
#plugin ${PLUGIN_DIR}/mod_chat_only.so
